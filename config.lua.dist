-- Frame number to make a savestate
-- Requirements : have to be an integer
local doSaveStateAt = nil

-- Slot (Savestate) to load
-- Requirements : have to be an integer between 0 and 9
local loadSlot = nil

-- Slot (Savestate) to save (if doSaveStateAt is assigned)
-- Requirements : have to be an integer between 0 and 9
local saveSlot = nil

-- Current Tas
-- Requirements : have to be a string and the name of a folder in your root project
local currentTas = nil

-- If a savestate have to be load before a tas, you specified it here
-- Requirements : have to be a table (key : tas name, value : name of the savestate [present in the folder savestate])
local loadSavestate = nil

return {
    ['currentTas'] = currentTas,
    ['doSaveStateAt'] = doSaveStateAt,
    ['loadSavestate'] = loadSavestate,
    ['loadSlot'] = loadSlot,
    ['saveSlot'] = saveSlot,
}